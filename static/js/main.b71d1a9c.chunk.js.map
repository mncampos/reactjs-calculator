{"version":3,"sources":["Components/calculator_button/calculator_button.jsx","Components/calculator_panel/calculator_panel.jsx","Components/calculator_visor/calculator_visor.jsx","Logic/compute.jsx","App.js","reportWebVitals.js","index.js"],"names":["CalcButton","props","onClick","clickHandler","Name","CalcPanel","handleClick","buttonName","className","this","React","Component","CalcVisor","TotalValue","Operation","NextValue","calculate","value1","value2","operation","Value1","Big","Value2","plus","toString","times","minus","alert","div","compute","obj","total","next","Math","trunc","test","Number","App","state","setState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b71d1a9c.chunk.js","sourcesContent":["import React from 'react';\r\nimport './calculator_button.css'\r\n\r\nfunction CalcButton(props)\r\n{\r\n\r\n    function handleClick(){\r\n        props.clickHandler(props.Name);\r\n      };\r\n\r\n\r\n    return(\r\n        <button onClick={handleClick}>{props.Name}</button>\r\n    );\r\n}\r\n\r\n\r\nexport default CalcButton;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport CalcButton from '../calculator_button/calculator_button.jsx';\r\nimport './calculator_panel.css';\r\n\r\nexport default class CalcPanel extends React.Component{\r\n\r\n    handleClick = buttonName => {\r\n        this.props.clickHandler(buttonName);\r\n    }\r\n\r\n    render()\r\n    {\r\n        return(\r\n\r\n            <div className=\"component-button-panel\">\r\n                <div className=\"first-row\">\r\n                <CalcButton Name='0' clickHandler={this.handleClick}/>    \r\n                <CalcButton Name='1' clickHandler={this.handleClick}/>\r\n                <CalcButton Name='2' clickHandler={this.handleClick}/>\r\n                <CalcButton Name='3' clickHandler={this.handleClick}/>\r\n                <CalcButton Name='4' clickHandler={this.handleClick}/>\r\n                </div>\r\n                <div>\r\n                <CalcButton Name='5' clickHandler={this.handleClick}/>\r\n                <CalcButton Name='6' clickHandler={this.handleClick}/>\r\n                <CalcButton Name='7' clickHandler={this.handleClick}/>\r\n                <CalcButton Name='8' clickHandler={this.handleClick}/>\r\n                <CalcButton Name='9' clickHandler={this.handleClick}/>\r\n                </div>\r\n                <div>\r\n                <CalcButton Name='/' clickHandler={this.handleClick}/>\r\n                <CalcButton Name='*' clickHandler={this.handleClick}/>\r\n                <CalcButton Name='-' clickHandler={this.handleClick}/>\r\n                <CalcButton Name='+' clickHandler={this.handleClick}/>\r\n                <CalcButton Name='=' clickHandler={this.handleClick}/>\r\n                </div>\r\n                <div>\r\n                <CalcButton Name='AC' clickHandler={this.handleClick}/>\r\n                <CalcButton Name='Del' clickHandler={this.handleClick}/>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n}","import React from 'react';\r\nimport './calculator_visor.css';\r\n\r\nfunction CalcVisor(props){\r\n        return(\r\n            <div>\r\n            <div className=\"visor\">{props.TotalValue}</div>\r\n            <div className=\"smallvisor\">{props.Operation} {props.NextValue}</div>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default CalcVisor;","import Big from \"big.js\";\r\n\r\nfunction isNumber(value){\r\n    return /[0-9]+/.test(value);\r\n}\r\n\r\nfunction calculate(value1, value2, operation)\r\n{\r\n    const Value1 = Big(value1 || \"0\");\r\n    const Value2 = Big(value2 || (operation === \"/\" || operation === \"*\" ? \"1\":\"0\"));\r\n\r\n\r\n    if(operation === \"+\")\r\n        return Value1.plus(Value2).toString();\r\n    if(operation === \"*\")\r\n        return Value1.times(Value2).toString();\r\n    if(operation === \"-\")\r\n        return Value1.minus(Value2).toString();\r\n    if(operation === \"/\")\r\n    {\r\n        if(Value2 === 0){\r\n        alert(\"Erro : DivisÃ£o por 0.\");\r\n        return \"0\";\r\n        }\r\n        else\r\n        return Value1.div(Value2).toString();\r\n    }\r\n        \r\n}\r\n\r\nexport default function compute(obj, buttonName)\r\n{\r\n    if(buttonName === \"AC\"){\r\n        return {\r\n            total: 0,\r\n            next: 0,\r\n            operation: null,\r\n        }\r\n    }\r\n\r\n    if(buttonName === \"Del\")\r\n    {\r\n        return{\r\n            total: Math.trunc(obj.total/10),\r\n            next: obj.next,\r\n            operation: obj.operation\r\n        }\r\n    }\r\n\r\n\r\n    \r\n    if(isNumber(buttonName))\r\n    {\r\n        if(obj.total === 0)\r\n        {\r\n            return{\r\n                total: buttonName,\r\n                next: obj.next,\r\n                operation: obj.operation\r\n            }\r\n        }\r\n        else\r\n        return {\r\n            total: Number(obj.total*10) + Number(buttonName),\r\n            next: obj.next,\r\n            operation: obj.operation\r\n        }\r\n    }\r\n\r\n\r\n    \r\n\r\n    if(buttonName === \"+\" || buttonName === \"-\" || buttonName === \"*\" || buttonName === \"/\")\r\n    {\r\n        if(!obj.operation)\r\n        return{\r\n            total: 0,\r\n            next: obj.total,\r\n            operation: buttonName\r\n        }\r\n        else\r\n        return{\r\n            total: obj.total,\r\n            next: obj.next,\r\n            operation: buttonName\r\n        }\r\n    }\r\n\r\n    if(buttonName === \"=\")\r\n    {\r\n        if(obj.next && obj.operation)\r\n        return{\r\n            total: calculate(obj.next, obj.total, obj.operation),\r\n            next: null,\r\n            operation: null,\r\n        }\r\n    }\r\n\r\n}","import './App.css';\nimport CalcPanel from './Components/calculator_panel/calculator_panel.jsx';\nimport CalcVisor from './Components/calculator_visor/calculator_visor';\nimport compute from './Logic/compute.jsx';\nimport React from 'react';\n\n\nclass App extends React.Component {\n\n  state = {\n    total: 0,\n    next: 0,\n    operation: null\n  }\n\n  handleClick = buttonName => {\n    this.setState(compute(this.state, buttonName));\n  }\n\n  render(){\n  return (\n    <div className=\"Calculator\">\n    <CalcVisor Operation={this.state.operation} NextValue={this.state.next} TotalValue={this.state.total}/>\n    <CalcPanel clickHandler={this.handleClick}/>\n    </div>\n  );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}